$white: #fff;
$black: #000;
$grey_slate: #1B1B1B;
$grey_light: #2A2A2A;
$blue: #3A8BC2;

/* BREAKPOINTS */

$screen-sizes: (
	ipad: 768px,
	desktop: 1025px
);


@mixin respond($media) {

	@media only screen and (min-width: (map-get($screen-sizes, $media))) {
		@content;
	}

}

$breakpoints: (
		s:	0px,
		sm: 768px,
		md: 1000px,
		lg: 1200px
);

$cols: 12;

$gutter: 10px;

@each $key, $value in $breakpoints {

	@media screen and (min-width: $value) {
		.container{
			position: relative;
			max-width: $value;
			display: block;
			margin: 0 auto;
			padding: 0 $gutter;

			&:before, &:after {
				display: table;
				content: ' ';
				box-sizing: border-box;
			}

			&:after {
				clear: both;
			}

			@if ($key == 's') {
				max-width: 100%;
				width: 100%;
			}

			.row {
				position: relative;
				margin: 0 ($gutter * -1);

				&:before, &:after {
					display: table;
					content: ' ';
					box-sizing: border-box;
				}

				&:after {
					clear: both;
				}

				@for $i from 1 through $cols {

					.col-#{$key}-#{$i} {
						position: relative;
						width: percentage($i / $cols);
						float: left;
						padding: 0 $gutter;
						box-sizing: border-box;
					}
				}
			}
		}
	}
}